val heights = List(0,1,4,6,7,9,10,13,15,17,17,18,21,23,23,25,26,29,32,36,36,37,39,42,42,43,44,47,49,51,51,51,53,56,60,60,61,63,64,66,66,67,69,70,72,72,73,76,78,78,78,79,82,85,89,89,90,92,95,95,96,97,100,102,104,104,104,106,109,113,113,114,116,117,119,119,120,122,123,125,125,126,129,131,131,131,132,135,138,142,142,143,145,148,148,149,150,153,155,157,157,157,159,162,166,166,167,169,170,172,172,173,175,176,178,178,179,182,184,184,184,185,188,191,195,195,196,198,201,201,202,203,206,208,210,210,210,212,215,219,219,220,222,223,225,225,226,228,229,231,231,232,235,237,237,237,238,241,244,248,248,249,251,254,254,255,256,259,261,263,263,263,265,268,272,272,273,275,276,278,278,279,281,282,284,284,285,288,290,290,290,291,294,297,301,301,302,304,307,307,308,309,312,314,316,316,316,318,321,325,325,326,328,329,331,331,332,334,335,337,337,338,341,343,343,343,344,347,350,354,354,355,357,360,360,361,362,365,367,369,369,369,371,374,378,378,379,381,382,384,384,385,387,388,390,390,391,394,396,396,396,397,400,403,407,407,408,410,413,413,414,415,418,420,422,422,422,424,427,431,431,432,434,435,437,437,438,440,441,443,443,444,447,449,449,449,450,453,456,460,460,461,463,466,466,467,468,471,473,475,475,475,477,480,484,484,485,487,488,490,490,491,493,494,496,496,497,500,502,502,502,503,506,509,513,513,514,516,519,519,520,521,524,526,528,528,528,530,533,537,537,538,540,541,543,543,544,546,547,549,549,550,553,555,555,555,556,559,562,566,566,567,569,572,572,573,574,577,579,581,581,581,583,586,590,590,591,593,594,596,596,597,599,600,602,602,603,606,608,608,608,609,612,615,619,619,620,622,625,625,626,627,630,632,634,634,634,636,639,643,643,644,646,647,649,649,650,652,653,655,655,656,659,661,661,661,662,665,668,672,672,673,675,678,678,679,680,683,685,687,687,687,689,692,696,696,697,699,700,702,702,703,705,706,708,708,709,712,714,714,714,715,718,721,725,725,726,728,731,731,732,733,736,738,740,740,740,742,745,749,749,750,752,753,755,755,756,758,759,761,761,762,765,767,767,767,768,771,774,778,778,779,781,784,784,785,786,789,791,793,793,793,795,798,802,802,803,805,806,808,808,809,811,812,814,814,815,818,820,820,820,821,824,827,831,831,832,834,837,837,838,839,842,844,846,846,846,848,851,855,855,856,858,859,861,861,862,864,865,867,867,868,871,873,873,873,874,877,880,884,884,885,887,890,890,891,892,895,897,899,899,899,901,904,908,908,909,911,912,914,914,915,917,918,920,920,921,924,926,926,926,927,930,933,937,937,938,940,943,943,944,945,948,950,952,952,952,954,957,961,961,962,964,965,967,967,968,970,971,973,973,974,977,979,979,979,980,983,986,990,990,991,993,996,996,997,998,1001,1003,1005,1005,1005,1007,1010,1014,1014,1015,1017,1018,1020,1020,1021,1023,1024,1026,1026,1027,1030,1032,1032,1032,1033,1036,1039,1043,1043,1044,1046,1049,1049,1050,1051,1054,1056,1058,1058,1058,1060,1063,1067,1067,1068,1070,1071,1073,1073,1074,1076,1077,1079,1079,1080,1083,1085,1085,1085,1086,1089,1092,1096,1096,1097,1099,1102,1102,1103,1104,1107,1109,1111,1111,1111,1113,1116,1120,1120,1121,1123,1124,1126,1126,1127,1129,1130,1132,1132,1133,1136,1138,1138,1138,1139,1142,1145,1149,1149,1150,1152,1155,1155,1156,1157,1160,1162,1164,1164,1164,1166,1169,1173,1173,1174,1176,1177,1179,1179,1180,1182,1183,1185,1185,1186,1189,1191,1191,1191,1192,1195,1198,1202,1202,1203,1205,1208,1208,1209,1210,1213,1215,1217,1217,1217,1219,1222,1226,1226,1227,1229,1230,1232,1232,1233,1235,1236,1238,1238,1239,1242,1244,1244,1244,1245,1248,1251,1255,1255,1256,1258,1261,1261,1262,1263,1266,1268,1270,1270,1270,1272,1275,1279,1279,1280,1282,1283,1285,1285,1286,1288,1289,1291,1291,1292,1295,1297,1297,1297,1298,1301,1304,1308,1308,1309,1311,1314,1314,1315,1316,1319,1321,1323,1323,1323,1325,1328,1332,1332,1333,1335,1336,1338,1338,1339,1341,1342,1344,1344,1345,1348,1350,1350,1350,1351,1354,1357,1361,1361,1362,1364,1367,1367,1368,1369,1372,1374,1376,1376,1376,1378,1381,1385,1385,1386,1388,1389,1391,1391,1392,1394,1395,1397,1397,1398,1401,1403,1403,1403,1404,1407,1410,1414,1414,1415,1417,1420,1420,1421,1422,1425,1427,1429,1429,1429,1431,1434,1438,1438,1439,1441,1442,1444,1444,1445,1447,1448,1450,1450,1451,1454,1456,1456,1456,1457,1460,1463,1467,1467,1468,1470,1473,1473,1474,1475,1478,1480,1482,1482,1482,1484,1487,1491,1491,1492,1494,1495,1497,1497,1498,1500,1501,1503,1503,1504,1507,1509,1509,1509,1510,1513,1516,1520).iterator

val lHeights = LazyList.from(heights)
val lDelta = lHeights.lazyZip(lHeights.tail).map(c => c._2 - c._1)


lDelta.take(40).toList
val x = LazyList.from(lDelta.sliding(10).map(_.toList))




x.take(10).toList
lDelta.take(1).toList
lDelta.take(1).tail.toList


val i = lDelta.head

//def doCheck(searchOffset: Int): List[Int] = {
//  println(searchOffset)
//  val offset       = lDelta.zipWithIndex.drop(searchOffset).find(c => c._1 == i).get._2
//  val lDelta2      = lDelta.drop(offset)
//  val matchedDelta = lDelta.lazyZip(lDelta2)
//  val matched      = matchedDelta.takeWhile(c => c._1 == c._2).map(_._1).toList
//  val check        = lDelta.take(matched.size * 2).toList
//  if (check == matched ++ matched) matched
//  else doCheck(offset)
//}

//doCheck(1)
